%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$exer5.obj
cinit CODE 0 15 15 E 2
text1 CODE 0 5F 5F 38 2
text2 CODE 0 23 23 3C 2
maintext CODE 0 97 97 10 2
cstackCOMMON COMMON 1 70 70 E 1
intentry CODE 0 4 4 E 2
bssBANK0 BANK0 1 20 20 8 1
$startup.obj
reset_vec CODE 0 0 0 3 2
end_init CODE 0 12 12 3 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 28-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 28-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 3-3 2
CONST A7-1FFF 2
ENTRY 3-3 2
ENTRY A7-1FFF 2
IDLOC 2000-2003 2
STACK 110-16F 1
CODE 3-3 2
CODE A7-1FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-10F 1
SFR3 180-18F 1
CONFIG 2007-2008 2
EEDATA 2100-21FF 2
STRCODE 3-3 2
STRCODE A7-1FFF 2
STRING 3-3 2
STRING A7-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$exer5.obj
15 cinit CODE >217:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
15 cinit CODE >220:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
15 cinit CODE >240:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
16 cinit CODE >241:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
17 cinit CODE >242:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
18 cinit CODE >243:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
19 cinit CODE >244:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1A cinit CODE >245:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1B cinit CODE >246:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1C cinit CODE >247:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1D cinit CODE >248:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1E cinit CODE >249:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1F cinit CODE >255:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
1F cinit CODE >257:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
20 cinit CODE >258:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exer5.as
4 intentry CODE >10:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
23 text2 CODE >6:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
23 text2 CODE >14:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
25 text2 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
29 text2 CODE >16:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
2B text2 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
2D text2 CODE >18:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
34 text2 CODE >19:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
38 text2 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
39 text2 CODE >22:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
40 text2 CODE >23:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
48 text2 CODE >24:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
4E text2 CODE >25:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
4F text2 CODE >27:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
56 text2 CODE >28:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
5A text2 CODE >30:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
5F text1 CODE >10:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
5F text1 CODE >11:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
61 text1 CODE >14:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
62 text1 CODE >15:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
66 text1 CODE >16:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
75 text1 CODE >17:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
79 text1 CODE >19:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
8C text1 CODE >22:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
97 maintext CODE >24:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
97 maintext CODE >28:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
98 maintext CODE >29:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
99 maintext CODE >30:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
9C maintext CODE >31:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
9D maintext CODE >33:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
9F maintext CODE >37:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
A2 maintext CODE >38:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
A3 maintext CODE >42:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
A5 maintext CODE >45:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
A6 maintext CODE >47:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\exe5.c
$startup.obj
12 end_init CODE >76:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
12 init CODE >73:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >39:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >40:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >41:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >42:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >43:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 functab ENTRY >44:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 reset_vec CODE >63:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
0 reset_vec CODE >68:C:\Users\Brenn\OneDrive\햞ea de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio5\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 2 0 ABS 0 - exer5.obj
__Hspace_0 A7 0 ABS 0 - -
__Hspace_1 7E 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 0 0 ABS 0 strings -
_PEIE 5E 0 ABS 0 - exer5.obj
___sp 0 0 STACK 2 stack startup.obj
_freq 20 0 BANK0 1 bssBANK0 exer5.obj
_main 12E 0 CODE 0 maintext exer5.obj
btemp 7E 0 ABS 0 - exer5.obj
start 24 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - exer5.obj
__size_of___lwdiv 0 0 ABS 0 - exer5.obj
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - exer5.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
_CCP1IE 462 0 ABS 0 - exer5.obj
_CCP1IF 62 0 ABS 0 - exer5.obj
_CCPR1H 16 0 ABS 0 - exer5.obj
_CCPR1L 15 0 ABS 0 - exer5.obj
__Lmaintext 0 0 ABS 0 maintext -
__end_of___lwdiv BE 0 CODE 0 text2 exer5.obj
___lwdiv@quotient 75 0 COMMON 1 cstackCOMMON exer5.obj
_interrupcao BE 0 CODE 0 text1 exer5.obj
start_initialization 2A 0 CODE 0 cinit exer5.obj
__pcstackBANK0 0 0 BANK0 1 cstackBANK0 exer5.obj
_TMR1CS 81 0 ABS 0 - exer5.obj
_TMR1IE 460 0 ABS 0 - exer5.obj
_TMR1ON 80 0 ABS 0 - exer5.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 46 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
___lwdiv@counter 77 0 COMMON 1 cstackCOMMON exer5.obj
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit 2A 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 24 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 24 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_GIE 5F 0 ABS 0 - exer5.obj
__S0 A7 0 ABS 0 - -
__S1 7E 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
saved_w 7E 0 ABS 0 - exer5.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__LbssBANK0 0 0 ABS 0 bssBANK0 -
___lwdiv 46 0 CODE 0 text2 exer5.obj
__pmaintext 12E 0 CODE 0 maintext exer5.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
___lwdiv@divisor 70 0 COMMON 1 cstackCOMMON exer5.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__end_of_interrupcao 12E 0 CODE 0 text1 exer5.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 24 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 3E 0 CODE 0 cinit exer5.obj
__Hintentry 24 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
___lwdiv@dividend 72 0 COMMON 1 cstackCOMMON exer5.obj
?___lwdiv 70 0 COMMON 1 cstackCOMMON exer5.obj
__Hreset_vec 6 0 CODE 0 reset_vec -
__HbssBANK0 0 0 ABS 0 bssBANK0 -
__ptext1 BE 0 CODE 0 text1 exer5.obj
__ptext2 46 0 CODE 0 text2 exer5.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 3E 0 CODE 0 cinit exer5.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON exer5.obj
__Hend_init 2A 0 CODE 0 end_init -
__end_of_main 14E 0 CODE 0 maintext exer5.obj
_TRISC 87 0 ABS 0 - exer5.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry exer5.obj
_t_dif 26 0 BANK0 1 bssBANK0 exer5.obj
_t_new 24 0 BANK0 1 bssBANK0 exer5.obj
_t_old 22 0 BANK0 1 bssBANK0 exer5.obj
_CCP1CON 17 0 ABS 0 - exer5.obj
__pintentry 8 0 CODE 0 intentry exer5.obj
__initialization 2A 0 CODE 0 cinit exer5.obj
__pbssBANK0 20 0 BANK0 1 bssBANK0 exer5.obj
__size_of_interrupcao 0 0 ABS 0 - exer5.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackCOMMON 1 70 70 E 1
intentry 0 4 8 A3 2
reset_vec 0 0 0 3 2
bssBANK0 1 20 20 8 1
