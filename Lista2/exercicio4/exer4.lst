

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 19 20:21:42 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0007                     _PORTC	set	7
   124  0001                     _TMR0	set	1
   125  005D                     _T0IE	set	93
   126  005F                     _GIE	set	95
   127  005A                     _T0IF	set	90
   128  0087                     _TRISC	set	135
   129  0081                     _OPTION_REG	set	129
   130                           
   131                           	psect	cinit
   132  0015                     start_initialization:	
   133                           ; #config settings
   134                           
   135  0015                     __initialization:	
   136  0015                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139  0015                     __end_of__initialization:	
   140  0015  0183               	clrf	3
   141  0016  120A  118A  282A   	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	cstackCOMMON
   144  0070                     __pcstackCOMMON:	
   145  0070                     ?_interruptTMR0:	
   146  0070                     ??_interruptTMR0:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0070                     ?_main:	
   150                           ; 1 bytes @ 0x0
   151                           
   152                           
   153                           ; 1 bytes @ 0x0
   154  0070                     	ds	4
   155  0074                     ??_main:	
   156                           
   157                           	psect	maintext
   158  002A                     __pmaintext:	
   159                           ; 1 bytes @ 0x4
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 13 in file "C:\Users\Brenn\OneDrive\Documents\Unifei\Micro\microcontroladores\exercicio4\exe4.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2
   174 ;; Tracked objects:
   175 ;;		On entry : B00/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   179 ;;      Params:         0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0
   182 ;;      Totals:         0       0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels required when called:    1
   185 ;; This function calls:
   186 ;;		Nothing
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           
   193                           ;psect for function _main
   194  002A                     _main:	
   195                           
   196                           ;exe4.c: 14: GIE = 1;
   197                           
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg+status,2]
   200  002A  178B               	bsf	11,7	;volatile
   201                           
   202                           ;exe4.c: 15: T0IE = 1;
   203  002B  168B               	bsf	11,5	;volatile
   204                           
   205                           ;exe4.c: 16: OPTION_REG = 0b10000100;
   206  002C  3084               	movlw	132
   207  002D  1683               	bsf	3,5	;RP0=1, select bank1
   208  002E  1303               	bcf	3,6	;RP1=0, select bank1
   209  002F  0081               	movwf	1	;volatile
   210                           
   211                           ;exe4.c: 17: TMR0 = 48;
   212  0030  3030               	movlw	48
   213  0031  1283               	bcf	3,5	;RP0=0, select bank0
   214  0032  1303               	bcf	3,6	;RP1=0, select bank0
   215  0033  0081               	movwf	1	;volatile
   216                           
   217                           ;exe4.c: 18: TRISC = 0x00;
   218  0034  1683               	bsf	3,5	;RP0=1, select bank1
   219  0035  1303               	bcf	3,6	;RP1=0, select bank1
   220  0036  0187               	clrf	7	;volatile
   221  0037                     l25:	
   222                           ;exe4.c: 19: while(1){};
   223                           
   224  0037  2837               	goto	l25
   225  0038                     __end_of_main:	
   226                           
   227                           	psect	text1
   228  0019                     __ptext1:	
   229 ;; *************** function _interruptTMR0 *****************
   230 ;; Defined at:
   231 ;;		line 5 in file "C:\Users\Brenn\OneDrive\Documents\Unifei\Micro\microcontroladores\exercicio4\exe4.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          4       0       0       0       0
   248 ;;      Totals:         4       0       0       0       0
   249 ;;Total ram usage:        4 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Interrupt level 1
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _interruptTMR0
   260  0019                     _interruptTMR0:	
   261                           
   262                           ;exe4.c: 6: if(T0IF == 1){
   263  0019  1D0B               	btfss	11,2	;volatile
   264  001A  281F               	goto	i1l20
   265                           
   266                           ;exe4.c: 7: T0IF =0;
   267  001B  110B               	bcf	11,2	;volatile
   268                           
   269                           ;exe4.c: 8: TMR0 = 48;
   270  001C  3030               	movlw	48
   271  001D  0081               	movwf	1	;volatile
   272                           
   273                           ;exe4.c: 9: PORTC = ~PORTC;
   274  001E  0987               	comf	7,f	;volatile
   275  001F                     i1l20:	
   276  001F  0873               	movf	??_interruptTMR0+3,w
   277  0020  00FF               	movwf	127
   278  0021  0872               	movf	??_interruptTMR0+2,w
   279  0022  008A               	movwf	10
   280  0023  0871               	movf	??_interruptTMR0+1,w
   281  0024  0084               	movwf	4
   282  0025  0E70               	swapf	??_interruptTMR0^(0+-128),w
   283  0026  0083               	movwf	3
   284  0027  0EFE               	swapf	126,f
   285  0028  0E7E               	swapf	126,w
   286  0029  0009               	retfie
   287  002A                     __end_of_interruptTMR0:	
   288  007E                     btemp	set	126	;btemp
   289  007E                     wtemp0	set	126
   290                           
   291                           	psect	intentry
   292  0004                     __pintentry:	
   293                           ;incstack = 0
   294                           ; Regs used in _interruptTMR0: [wreg]
   295                           
   296  0004                     interrupt_function:	
   297  007E                     saved_w	set	btemp
   298  0004  00FE               	movwf	btemp
   299  0005  0E03               	swapf	3,w
   300  0006  00F0               	movwf	??_interruptTMR0
   301  0007  0804               	movf	4,w
   302  0008  00F1               	movwf	??_interruptTMR0+1
   303  0009  080A               	movf	10,w
   304  000A  00F2               	movwf	??_interruptTMR0+2
   305  000B  1283               	bcf	3,5	;RP0=0, select bank0
   306  000C  1303               	bcf	3,6	;RP1=0, select bank0
   307  000D  087F               	movf	btemp+1,w
   308  000E  00F3               	movwf	??_interruptTMR0+3
   309  000F  120A  118A  2819   	ljmp	_interruptTMR0


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptTMR0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptTMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptTMR0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptTMR0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptTMR0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interruptTMR0                                        4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interruptTMR0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 19 20:21:42 2020

  __end_of_interruptTMR0 002A                       l25 0037                      _GIE 005F  
                    fsr0 0004                     _T0IE 005D                     _T0IF 005A  
                   i1l20 001F                     _TMR0 0001                     _main 002A  
                   btemp 007E                     start 0012                    ?_main 0070  
                  _PORTC 0007                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 0038                   ??_main 0074                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070               __pmaintext 002A  
             __pintentry 0004   __size_of_interruptTMR0 0011                  __ptext1 0019  
   end_of_initialization 0015            _interruptTMR0 0019           ?_interruptTMR0 0070  
    start_initialization 0015                ___latbits 0002          ??_interruptTMR0 0070  
      interrupt_function 0004            __size_of_main 000E                 intlevel1 0000  
             _OPTION_REG 0081  
