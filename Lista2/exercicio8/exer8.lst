

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 21 05:54:43 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0001                     _TMR0	set	1
   128  001E                     _ADRESH	set	30
   129  001F                     _ADCON0	set	31
   130  005D                     _T0IE	set	93
   131  005F                     _GIE	set	95
   132  005A                     _T0IF	set	90
   133  009F                     _ADCON1	set	159
   134  0085                     _TRISA	set	133
   135  0081                     _OPTION_REG	set	129
   136  009E                     _ADRESL	set	158
   137  0188                     _ANSEL	set	392
   138                           
   139                           	psect	cinit
   140  0015                     start_initialization:	
   141                           ; #config settings
   142                           
   143  0015                     __initialization:	
   144                           
   145                           ; Clear objects allocated to COMMON
   146  0015  01FA               	clrf	__pbssCOMMON& (0+127)
   147  0016  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   148  0017                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  0017                     __end_of__initialization:	
   152  0017  0183               	clrf	3
   153  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMMON
   156  007A                     __pbssCOMMON:	
   157  007A                     _valor:	
   158  007A                     	ds	2
   159                           
   160                           	psect	cstackCOMMON
   161  0070                     __pcstackCOMMON:	
   162  0070                     ?_amostrador:	
   163  0070                     ?_interrompe:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_main:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?___wmul:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ___wmul@multiplier:	
   173                           ; 2 bytes @ 0x0
   174                           
   175                           
   176                           ; 2 bytes @ 0x0
   177  0070                     	ds	2
   178  0072                     ___wmul@multiplicand:	
   179                           
   180                           ; 2 bytes @ 0x2
   181  0072                     	ds	2
   182  0074                     ??___wmul:	
   183  0074                     ___wmul@product:	
   184                           ; 1 bytes @ 0x4
   185                           
   186                           
   187                           ; 2 bytes @ 0x4
   188  0074                     	ds	2
   189  0076                     ??_amostrador:	
   190  0076                     ??_interrompe:	
   191                           ; 1 bytes @ 0x6
   192                           
   193                           
   194                           ; 1 bytes @ 0x6
   195  0076                     	ds	4
   196                           
   197                           	psect	cstackBANK0
   198  0020                     __pcstackBANK0:	
   199  0020                     ??_main:	
   200                           
   201                           ; 1 bytes @ 0x0
   202  0020                     	ds	2
   203                           
   204                           	psect	maintext
   205  001B                     __pmaintext:	
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 31 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio8\exe8.c
      +"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0
   220 ;; Tracked objects:
   221 ;;		On entry : B00/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   225 ;;      Params:         0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0
   227 ;;      Temps:          0       2       0       0       0
   228 ;;      Totals:         0       2       0       0       0
   229 ;;Total ram usage:        2 bytes
   230 ;; Hardware stack levels required when called:    3
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           
   239                           ;psect for function _main
   240  001B                     _main:	
   241                           
   242                           ;exe8.c: 33: OPTION_REG=0b10000101;
   243                           
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg+status,2+status,0]
   246  001B  3085               	movlw	133
   247  001C  1683               	bsf	3,5	;RP0=1, select bank1
   248  001D  1303               	bcf	3,6	;RP1=0, select bank1
   249  001E  0081               	movwf	1	;volatile
   250                           
   251                           ;exe8.c: 34: TMR0 = 99;
   252  001F  3063               	movlw	99
   253  0020  1283               	bcf	3,5	;RP0=0, select bank0
   254  0021  1303               	bcf	3,6	;RP1=0, select bank0
   255  0022  0081               	movwf	1	;volatile
   256                           
   257                           ;exe8.c: 35: GIE = 1;
   258  0023  178B               	bsf	11,7	;volatile
   259                           
   260                           ;exe8.c: 36: T0IE = 1;
   261  0024  168B               	bsf	11,5	;volatile
   262                           
   263                           ;exe8.c: 39: TRISA |= (1<<0);
   264  0025  1683               	bsf	3,5	;RP0=1, select bank1
   265  0026  1303               	bcf	3,6	;RP1=0, select bank1
   266  0027  1405               	bsf	5,0	;volatile
   267                           
   268                           ;exe8.c: 40: ANSEL |= (1<<0);
   269  0028  1683               	bsf	3,5	;RP0=1, select bank3
   270  0029  1703               	bsf	3,6	;RP1=1, select bank3
   271  002A  1408               	bsf	8,0	;volatile
   272                           
   273                           ;exe8.c: 42: ADCON0 = 0x00;
   274  002B  1283               	bcf	3,5	;RP0=0, select bank0
   275  002C  1303               	bcf	3,6	;RP1=0, select bank0
   276  002D  019F               	clrf	31	;volatile
   277                           
   278                           ;exe8.c: 43: ADCON0 |= 0b01000001;
   279  002E  3041               	movlw	65
   280  002F  00A0               	movwf	??_main
   281  0030  0820               	movf	??_main,w
   282  0031  049F               	iorwf	31,f	;volatile
   283                           
   284                           ;exe8.c: 44: ADCON1 = 0;
   285  0032  1683               	bsf	3,5	;RP0=1, select bank1
   286  0033  1303               	bcf	3,6	;RP1=0, select bank1
   287  0034  019F               	clrf	31	;volatile
   288                           
   289                           ;exe8.c: 45: ADCON1 |= (1<<7);
   290  0035  179F               	bsf	31,7	;volatile
   291                           
   292                           ;exe8.c: 47: _delay((unsigned long)((5)*(4000000/4000.0)));
   293  0036  3007               	movlw	7
   294  0037  1283               	bcf	3,5	;RP0=0, select bank0
   295  0038  1303               	bcf	3,6	;RP1=0, select bank0
   296  0039  00A1               	movwf	??_main+1
   297  003A  307C               	movlw	124
   298  003B  00A0               	movwf	??_main
   299  003C                     u137:	
   300  003C  0BA0               	decfsz	??_main,f
   301  003D  283C               	goto	u137
   302  003E  0BA1               	decfsz	??_main+1,f
   303  003F  283C               	goto	u137
   304  0040  0000               	nop
   305  0041                     l43:	
   306                           ;exe8.c: 48: while(1){
   307                           
   308  0041  2841               	goto	l43
   309  0042                     __end_of_main:	
   310                           
   311                           	psect	text1
   312  0083                     __ptext1:	
   313 ;; *************** function _interrompe *****************
   314 ;; Defined at:
   315 ;;		line 23 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio8\exe8.c
      +"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          4       0       0       0       0
   332 ;;      Totals:         4       0       0       0       0
   333 ;;Total ram usage:        4 bytes
   334 ;; Hardware stack levels used:    1
   335 ;; Hardware stack levels required when called:    2
   336 ;; This function calls:
   337 ;;		_amostrador
   338 ;; This function is called by:
   339 ;;		Interrupt level 1
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _interrompe
   345  0083                     _interrompe:	
   346                           
   347                           ;exe8.c: 24: if(T0IF == 1){
   348  0083  1D0B               	btfss	11,2	;volatile
   349  0084  288D               	goto	i1l38
   350                           
   351                           ;exe8.c: 25: TMR0 = 99;
   352  0085  3063               	movlw	99
   353  0086  0081               	movwf	1	;volatile
   354                           
   355                           ;exe8.c: 26: T0IF = 0;
   356  0087  110B               	bcf	11,2	;volatile
   357                           
   358                           ;exe8.c: 27: amostrador();
   359  0088  120A  118A  2063  120A  118A  	fcall	_amostrador
   360  008D                     i1l38:	
   361  008D  0879               	movf	??_interrompe+3,w
   362  008E  1283               	bcf	3,5	;RP0=0, select bank0
   363  008F  1303               	bcf	3,6	;RP1=0, select bank0
   364  0090  00FF               	movwf	127
   365  0091  0878               	movf	??_interrompe+2,w
   366  0092  008A               	movwf	10
   367  0093  0877               	movf	??_interrompe+1,w
   368  0094  0084               	movwf	4
   369  0095  0E76               	swapf	??_interrompe^(0+-128),w
   370  0096  0083               	movwf	3
   371  0097  0EFE               	swapf	126,f
   372  0098  0E7E               	swapf	126,w
   373  0099  0009               	retfie
   374  009A                     __end_of_interrompe:	
   375                           
   376                           	psect	intentry
   377  0004                     __pintentry:	
   378                           ;incstack = 0
   379                           ; Regs used in _interrompe: [wreg+status,2+status,0+pclath+cstack]
   380                           
   381  0004                     interrupt_function:	
   382  007E                     saved_w	set	btemp
   383  0004  00FE               	movwf	btemp
   384  0005  0E03               	swapf	3,w
   385  0006  00F6               	movwf	??_interrompe
   386  0007  0804               	movf	4,w
   387  0008  00F7               	movwf	??_interrompe+1
   388  0009  080A               	movf	10,w
   389  000A  00F8               	movwf	??_interrompe+2
   390  000B  1283               	bcf	3,5	;RP0=0, select bank0
   391  000C  1303               	bcf	3,6	;RP1=0, select bank0
   392  000D  087F               	movf	btemp+1,w
   393  000E  00F9               	movwf	??_interrompe+3
   394  000F  120A  118A  2883   	ljmp	_interrompe
   395                           
   396                           	psect	text2
   397  0063                     __ptext2:	
   398 ;; *************** function _amostrador *****************
   399 ;; Defined at:
   400 ;;		line 7 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio8\exe8.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    1
   421 ;; This function calls:
   422 ;;		___wmul
   423 ;; This function is called by:
   424 ;;		_interrompe
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _amostrador
   430  0063                     _amostrador:	
   431                           
   432                           ;exe8.c: 10: ADCON0 |= (1<<1);
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _amostrador: [wreg+status,2+status,0+pclath+cstack]
   436  0063  1283               	bcf	3,5	;RP0=0, select bank0
   437  0064  1303               	bcf	3,6	;RP1=0, select bank0
   438  0065  149F               	bsf	31,1	;volatile
   439  0066                     i1l29:	
   440                           ;exe8.c: 11: while(ADCON0 & (1<<1));
   441                           
   442  0066  189F               	btfsc	31,1	;volatile
   443  0067  2866               	goto	i1l29
   444                           
   445                           ;exe8.c: 13: valor = (ADRESH<<8) + ADRESL;
   446  0068  081E               	movf	30,w	;volatile
   447  0069  00FB               	movwf	_valor+1
   448  006A  1683               	bsf	3,5	;RP0=1, select bank1
   449  006B  1303               	bcf	3,6	;RP1=0, select bank1
   450  006C  081E               	movf	30,w	;volatile
   451  006D  00FA               	movwf	_valor
   452                           
   453                           ;exe8.c: 15: valor = valor*10;
   454  006E  087B               	movf	_valor+1,w
   455  006F  00F1               	movwf	___wmul@multiplier+1
   456  0070  087A               	movf	_valor,w
   457  0071  00F0               	movwf	___wmul@multiplier
   458  0072  300A               	movlw	10
   459  0073  00F2               	movwf	___wmul@multiplicand
   460  0074  3000               	movlw	0
   461  0075  00F3               	movwf	___wmul@multiplicand+1
   462  0076  120A  118A  2042  120A  118A  	fcall	___wmul
   463  007B  0871               	movf	?___wmul+1,w
   464  007C  00FB               	movwf	_valor+1
   465  007D  0870               	movf	?___wmul,w
   466  007E  00FA               	movwf	_valor
   467                           
   468                           ;exe8.c: 18: _delay((unsigned long)((5)*(4000000/4000000.0)));
   469  007F  2880               	nop2	;2 cycle nop
   470  0080  2881               	nop2	;2 cycle nop
   471  0081  0000               	nop
   472  0082  0008               	return
   473  0083                     __end_of_amostrador:	
   474                           
   475                           	psect	text3
   476  0042                     __ptext3:	
   477 ;; *************** function ___wmul *****************
   478 ;; Defined at:
   479 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  multiplier      2    0[COMMON] unsigned int 
   482 ;;  multiplicand    2    2[COMMON] unsigned int 
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  product         2    4[COMMON] unsigned int 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  2    0[COMMON] unsigned int 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         4       0       0       0       0
   495 ;;      Locals:         2       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         6       0       0       0       0
   498 ;;Total ram usage:        6 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_amostrador
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function ___wmul
   509  0042                     ___wmul:	
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   513  0042  01F4               	clrf	___wmul@product
   514  0043  01F5               	clrf	___wmul@product+1
   515  0044                     i1l558:	
   516  0044  1C70               	btfss	___wmul@multiplier,0
   517  0045  284C               	goto	i1l130
   518  0046  0872               	movf	___wmul@multiplicand,w
   519  0047  07F4               	addwf	___wmul@product,f
   520  0048  1803               	skipnc
   521  0049  0AF5               	incf	___wmul@product+1,f
   522  004A  0873               	movf	___wmul@multiplicand+1,w
   523  004B  07F5               	addwf	___wmul@product+1,f
   524  004C                     i1l130:	
   525  004C  3001               	movlw	1
   526  004D                     u8_25:	
   527  004D  1003               	clrc
   528  004E  0DF2               	rlf	___wmul@multiplicand,f
   529  004F  0DF3               	rlf	___wmul@multiplicand+1,f
   530  0050  3EFF               	addlw	-1
   531  0051  1D03               	skipz
   532  0052  284D               	goto	u8_25
   533  0053  3001               	movlw	1
   534  0054                     u9_25:	
   535  0054  1003               	clrc
   536  0055  0CF1               	rrf	___wmul@multiplier+1,f
   537  0056  0CF0               	rrf	___wmul@multiplier,f
   538  0057  3EFF               	addlw	-1
   539  0058  1D03               	skipz
   540  0059  2854               	goto	u9_25
   541  005A  0870               	movf	___wmul@multiplier,w
   542  005B  0471               	iorwf	___wmul@multiplier+1,w
   543  005C  1D03               	btfss	3,2
   544  005D  2844               	goto	i1l558
   545  005E  0875               	movf	___wmul@product+1,w
   546  005F  00F1               	movwf	?___wmul+1
   547  0060  0874               	movf	___wmul@product,w
   548  0061  00F0               	movwf	?___wmul
   549  0062  0008               	return
   550  0063                     __end_of___wmul:	
   551  007E                     btemp	set	126	;btemp
   552  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrompe in COMMON

    _amostrador->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrompe in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrompe in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrompe in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrompe in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrompe                                           4     4      0     198
                                              6 COMMON     4     4      0
                         _amostrador
 ---------------------------------------------------------------------------------
 (2) _amostrador                                           0     0      0     198
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrompe (ROOT)
   _amostrador
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 21 05:54:43 2020

                     l43 0041      ___wmul@multiplicand 0072                      _GIE 005F  
                    u137 003C                      fsr0 0004                     _T0IE 005D  
                   _T0IF 005A                     i1l29 0066                     i1l38 008D  
                   _TMR0 0001                     u8_25 004D                     u9_25 0054  
                   _main 001B                     btemp 007E                     start 0012  
                  ?_main 0070                    _ANSEL 0188                    i1l130 004C  
                  i1l558 0044                    _TRISA 0085                    _valor 007A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0042                   ??_main 0020  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ___wmul 0042                   saved_w 007E  
__end_of__initialization 0017           __pcstackCOMMON 0070               __pmaintext 001B  
                ?___wmul 0070               __pintentry 0004               _amostrador 0063  
        __size_of___wmul 0021                  __ptext1 0083                  __ptext2 0063  
                __ptext3 0042               _interrompe 0083     end_of_initialization 0017  
            ?_amostrador 0070           __end_of___wmul 0063      start_initialization 0015  
            ?_interrompe 0070      __size_of_amostrador 0020                 ??___wmul 0074  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
    __size_of_interrompe 0017        interrupt_function 0004           ___wmul@product 0074  
      ___wmul@multiplier 0070             ??_amostrador 0076       __end_of_amostrador 0083  
           ??_interrompe 0076            __size_of_main 0027       __end_of_interrompe 009A  
               intlevel1 0000               _OPTION_REG 0081  
