

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 21 05:42:57 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0006                     _PORTB	set	6
   208  001E                     _ADRESH	set	30
   209  001F                     _ADCON0	set	31
   210  0086                     _TRISB	set	134
   211  009E                     _ADRESL	set	158
   212  009F                     _ADCON1	set	159
   213  0085                     _TRISA	set	133
   214  0189                     _ANSELH	set	393
   215  0188                     _ANSEL	set	392
   216                           
   217                           	psect	cinit
   218  07F4                     start_initialization:	
   219                           ; #config settings
   220                           
   221  07F4                     __initialization:	
   222                           
   223                           ; Clear objects allocated to BANK0
   224  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   225  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   226  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   227  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   228  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   229  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   230  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   231  07FB  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   232  07FC                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  07FC                     __end_of__initialization:	
   236  07FC  0183               	clrf	3
   237  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssBANK0
   240  0020                     __pbssBANK0:	
   241  0020                     _tensao:	
   242  0020                     	ds	2
   243  0022                     _pos:	
   244  0022                     	ds	1
   245  0023                     _dez:	
   246  0023                     	ds	1
   247  0024                     _cen:	
   248  0024                     	ds	1
   249  0025                     _milhar:	
   250  0025                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:	
   254  0070                     ?_lcd_init:	
   255  0070                     ?_lcd_data:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_lcd_data:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_lcd_cmd:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_lcd_cmd:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?___lwmod:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ___lwmod@divisor:	
   274                           ; 2 bytes @ 0x0
   275                           
   276                           
   277                           ; 2 bytes @ 0x0
   278  0070                     	ds	2
   279  0072                     lcd_cmd@cmd:	
   280  0072                     lcd_data@low_nibble:	
   281                           ; 1 bytes @ 0x2
   282                           
   283  0072                     ___lwmod@dividend:	
   284                           ; 1 bytes @ 0x2
   285                           
   286                           
   287                           ; 2 bytes @ 0x2
   288  0072                     	ds	1
   289  0073                     ??_lcd_init:	
   290  0073                     ?_lcd_set_position:	
   291                           ; 1 bytes @ 0x3
   292                           
   293  0073                     lcd_data@high_nibble:	
   294                           ; 1 bytes @ 0x3
   295                           
   296  0073                     lcd_set_position@y:	
   297                           ; 1 bytes @ 0x3
   298                           
   299                           
   300                           ; 1 bytes @ 0x3
   301  0073                     	ds	1
   302  0074                     ??_lcd_set_position:	
   303  0074                     ??___lwmod:	
   304                           ; 1 bytes @ 0x4
   305                           
   306  0074                     lcd_data@data:	
   307                           ; 1 bytes @ 0x4
   308                           
   309                           
   310                           ; 1 bytes @ 0x4
   311  0074                     	ds	1
   312  0075                     lcd_set_position@x:	
   313  0075                     ___lwmod@counter:	
   314                           ; 1 bytes @ 0x5
   315                           
   316                           
   317                           ; 1 bytes @ 0x5
   318  0075                     	ds	1
   319  0076                     ?___lwdiv:	
   320  0076                     lcd_set_position@pos:	
   321                           ; 2 bytes @ 0x6
   322                           
   323  0076                     ___lwdiv@divisor:	
   324                           ; 1 bytes @ 0x6
   325                           
   326                           
   327                           ; 2 bytes @ 0x6
   328  0076                     	ds	2
   329  0078                     ___lwdiv@dividend:	
   330                           
   331                           ; 2 bytes @ 0x8
   332  0078                     	ds	2
   333  007A                     ??___lwdiv:	
   334                           
   335                           ; 1 bytes @ 0xA
   336  007A                     	ds	1
   337  007B                     ___lwdiv@quotient:	
   338                           
   339                           ; 2 bytes @ 0xB
   340  007B                     	ds	2
   341  007D                     ___lwdiv@counter:	
   342                           
   343                           ; 1 bytes @ 0xD
   344  007D                     	ds	1
   345                           
   346                           	psect	cstackBANK0
   347  0026                     __pcstackBANK0:	
   348  0026                     ??_main:	
   349                           
   350                           ; 1 bytes @ 0x0
   351  0026                     	ds	2
   352                           
   353                           	psect	maintext
   354  071A                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 11 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio7\exe7.c
      +"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          0       2       0       0       0
   377 ;;      Totals:         0       2       0       0       0
   378 ;;Total ram usage:        2 bytes
   379 ;; Hardware stack levels required when called:    2
   380 ;; This function calls:
   381 ;;		___lwdiv
   382 ;;		___lwmod
   383 ;;		_lcd_data
   384 ;;		_lcd_init
   385 ;;		_lcd_set_position
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _main
   393  071A                     _main:	
   394                           
   395                           ;exe7.c: 12: TRISA |=(1<<0);
   396                           
   397                           ;incstack = 0
   398                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   399  071A  1683               	bsf	3,5	;RP0=1, select bank1
   400  071B  1303               	bcf	3,6	;RP1=0, select bank1
   401  071C  1405               	bsf	5,0	;volatile
   402                           
   403                           ;exe7.c: 13: ANSEL |=(1<<0);
   404  071D  1683               	bsf	3,5	;RP0=1, select bank3
   405  071E  1703               	bsf	3,6	;RP1=1, select bank3
   406  071F  1408               	bsf	8,0	;volatile
   407                           
   408                           ;exe7.c: 14: ADCON0 = 0x00 ;
   409  0720  1283               	bcf	3,5	;RP0=0, select bank0
   410  0721  1303               	bcf	3,6	;RP1=0, select bank0
   411  0722  019F               	clrf	31	;volatile
   412                           
   413                           ;exe7.c: 15: ADCON0 |=0b01000001 ;
   414  0723  3041               	movlw	65
   415  0724  00A6               	movwf	??_main
   416  0725  0826               	movf	??_main,w
   417  0726  049F               	iorwf	31,f	;volatile
   418                           
   419                           ;exe7.c: 17: ADCON1 = 0;
   420  0727  1683               	bsf	3,5	;RP0=1, select bank1
   421  0728  1303               	bcf	3,6	;RP1=0, select bank1
   422  0729  019F               	clrf	31	;volatile
   423                           
   424                           ;exe7.c: 18: ADCON1 |=(1<<7);
   425  072A  179F               	bsf	31,7	;volatile
   426                           
   427                           ;exe7.c: 20: _delay((unsigned long)((20)*(4000000/4000.0)));
   428  072B  301A               	movlw	26
   429  072C  1283               	bcf	3,5	;RP0=0, select bank0
   430  072D  1303               	bcf	3,6	;RP1=0, select bank0
   431  072E  00A7               	movwf	??_main+1
   432  072F  30F7               	movlw	247
   433  0730  00A6               	movwf	??_main
   434  0731                     u377:	
   435  0731  0BA6               	decfsz	??_main,f
   436  0732  2F31               	goto	u377
   437  0733  0BA7               	decfsz	??_main+1,f
   438  0734  2F31               	goto	u377
   439  0735  2F36               	nop2
   440                           
   441                           ;exe7.c: 21: lcd_init();
   442  0736  120A  118A  2617  120A  118A  	fcall	_lcd_init
   443                           
   444                           ;exe7.c: 23: lcd_set_position (0,0);
   445  073B  01F3               	clrf	lcd_set_position@y
   446  073C  3000               	movlw	0
   447  073D  120A  118A  268B  120A  118A  	fcall	_lcd_set_position
   448                           
   449                           ;exe7.c: 24: lcd_data('T');
   450  0742  3054               	movlw	84
   451  0743  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   452                           
   453                           ;exe7.c: 25: lcd_data(':');
   454  0748  303A               	movlw	58
   455  0749  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   456                           
   457                           ;exe7.c: 26: lcd_set_position (0,7);
   458  074E  3007               	movlw	7
   459  074F  1283               	bcf	3,5	;RP0=0, select bank0
   460  0750  1303               	bcf	3,6	;RP1=0, select bank0
   461  0751  00A6               	movwf	??_main
   462  0752  0826               	movf	??_main,w
   463  0753  00F3               	movwf	lcd_set_position@y
   464  0754  3000               	movlw	0
   465  0755  120A  118A  268B  120A  118A  	fcall	_lcd_set_position
   466                           
   467                           ;exe7.c: 27: lcd_data ('V');
   468  075A  3056               	movlw	86
   469  075B  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   470  0760                     l865:	
   471                           ;exe7.c: 28: while(1){
   472                           
   473                           
   474                           ;exe7.c: 29: _delay((unsigned long)((5)*(4000000/4000000.0)));
   475  0760  2F61               	nop2	;2 cycle nop
   476  0761  2F62               	nop2	;2 cycle nop
   477  0762  0000               	nop
   478                           
   479                           ;exe7.c: 30: milhar=tensao/1000;
   480  0763  30E8               	movlw	232
   481  0764  00F6               	movwf	___lwdiv@divisor
   482  0765  3003               	movlw	3
   483  0766  00F7               	movwf	___lwdiv@divisor+1
   484  0767  1283               	bcf	3,5	;RP0=0, select bank0
   485  0768  1303               	bcf	3,6	;RP1=0, select bank0
   486  0769  0821               	movf	_tensao+1,w
   487  076A  00F9               	movwf	___lwdiv@dividend+1
   488  076B  0820               	movf	_tensao,w
   489  076C  00F8               	movwf	___lwdiv@dividend
   490  076D  120A  118A  264F  120A  118A  	fcall	___lwdiv
   491  0772  0876               	movf	?___lwdiv,w
   492  0773  1283               	bcf	3,5	;RP0=0, select bank0
   493  0774  1303               	bcf	3,6	;RP1=0, select bank0
   494  0775  00A6               	movwf	??_main
   495  0776  0826               	movf	??_main,w
   496  0777  00A5               	movwf	_milhar
   497                           
   498                           ;exe7.c: 31: cen=(tensao%1000)/100;
   499  0778  3064               	movlw	100
   500  0779  00F6               	movwf	___lwdiv@divisor
   501  077A  3000               	movlw	0
   502  077B  00F7               	movwf	___lwdiv@divisor+1
   503  077C  0821               	movf	_tensao+1,w
   504  077D  00F3               	movwf	___lwmod@dividend+1
   505  077E  0820               	movf	_tensao,w
   506  077F  00F2               	movwf	___lwmod@dividend
   507  0780  30E8               	movlw	232
   508  0781  00F0               	movwf	___lwmod@divisor
   509  0782  3003               	movlw	3
   510  0783  00F1               	movwf	___lwmod@divisor+1
   511  0784  120A  118A  25E5  120A  118A  	fcall	___lwmod
   512  0789  0871               	movf	?___lwmod+1,w
   513  078A  00F9               	movwf	___lwdiv@dividend+1
   514  078B  0870               	movf	?___lwmod,w
   515  078C  00F8               	movwf	___lwdiv@dividend
   516  078D  120A  118A  264F  120A  118A  	fcall	___lwdiv
   517  0792  0876               	movf	?___lwdiv,w
   518  0793  1283               	bcf	3,5	;RP0=0, select bank0
   519  0794  1303               	bcf	3,6	;RP1=0, select bank0
   520  0795  00A6               	movwf	??_main
   521  0796  0826               	movf	??_main,w
   522  0797  00A4               	movwf	_cen
   523                           
   524                           ;exe7.c: 32: dez=(tensao%100)/10;
   525  0798  300A               	movlw	10
   526  0799  00F6               	movwf	___lwdiv@divisor
   527  079A  3000               	movlw	0
   528  079B  00F7               	movwf	___lwdiv@divisor+1
   529  079C  0821               	movf	_tensao+1,w
   530  079D  00F3               	movwf	___lwmod@dividend+1
   531  079E  0820               	movf	_tensao,w
   532  079F  00F2               	movwf	___lwmod@dividend
   533  07A0  3064               	movlw	100
   534  07A1  00F0               	movwf	___lwmod@divisor
   535  07A2  3000               	movlw	0
   536  07A3  00F1               	movwf	___lwmod@divisor+1
   537  07A4  120A  118A  25E5  120A  118A  	fcall	___lwmod
   538  07A9  0871               	movf	?___lwmod+1,w
   539  07AA  00F9               	movwf	___lwdiv@dividend+1
   540  07AB  0870               	movf	?___lwmod,w
   541  07AC  00F8               	movwf	___lwdiv@dividend
   542  07AD  120A  118A  264F  120A  118A  	fcall	___lwdiv
   543  07B2  0876               	movf	?___lwdiv,w
   544  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   545  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   546  07B5  00A6               	movwf	??_main
   547  07B6  0826               	movf	??_main,w
   548  07B7  00A3               	movwf	_dez
   549                           
   550                           ;exe7.c: 33: lcd_set_position (0,4);
   551  07B8  3004               	movlw	4
   552  07B9  00A6               	movwf	??_main
   553  07BA  0826               	movf	??_main,w
   554  07BB  00F3               	movwf	lcd_set_position@y
   555  07BC  3000               	movlw	0
   556  07BD  120A  118A  268B  120A  118A  	fcall	_lcd_set_position
   557                           
   558                           ;exe7.c: 34: lcd_data(milhar+0x30);
   559  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   560  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   561  07C4  0825               	movf	_milhar,w
   562  07C5  3E30               	addlw	48
   563  07C6  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   564                           
   565                           ;exe7.c: 35: lcd_data(',');
   566  07CB  302C               	movlw	44
   567  07CC  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   568                           
   569                           ;exe7.c: 36: lcd_data(cen+0x30);
   570  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   571  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   572  07D3  0824               	movf	_cen,w
   573  07D4  3E30               	addlw	48
   574  07D5  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   575                           
   576                           ;exe7.c: 37: lcd_data(dez+0x30);
   577  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   578  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   579  07DC  0823               	movf	_dez,w
   580  07DD  3E30               	addlw	48
   581  07DE  120A  118A  26C7  120A  118A  	fcall	_lcd_data
   582                           
   583                           ;exe7.c: 38: ADCON0 |=(1<<1);
   584  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   585  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   586  07E5  149F               	bsf	31,1	;volatile
   587  07E6                     l34:	
   588                           ;exe7.c: 39: while(ADCON0 & (1<<1));
   589                           
   590  07E6  189F               	btfsc	31,1	;volatile
   591  07E7  2FE6               	goto	l34
   592                           
   593                           ;exe7.c: 40: tensao=(ADRESH<<8)+ ADRESL;
   594  07E8  081E               	movf	30,w	;volatile
   595  07E9  00A1               	movwf	_tensao+1
   596  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   597  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   598  07EC  081E               	movf	30,w	;volatile
   599  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   600  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   601  07EF  00A0               	movwf	_tensao
   602                           
   603                           ;exe7.c: 42: _delay((unsigned long)((5)*(4000000/4000000.0)));
   604  07F0  2FF1               	nop2	;2 cycle nop
   605  07F1  2FF2               	nop2	;2 cycle nop
   606  07F2  0000               	nop
   607  07F3  2F60               	goto	l865
   608  07F4                     __end_of_main:	
   609                           
   610                           	psect	text1
   611  068B                     __ptext1:	
   612 ;; *************** function _lcd_set_position *****************
   613 ;; Defined at:
   614 ;;		line 59 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio7\lcd.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  x               1    wreg     unsigned char 
   617 ;;  y               1    3[COMMON] unsigned char 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  x               1    5[COMMON] unsigned char 
   620 ;;  pos             1    6[COMMON] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      unsigned char 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         1       0       0       0       0
   631 ;;      Locals:         2       0       0       0       0
   632 ;;      Temps:          1       0       0       0       0
   633 ;;      Totals:         4       0       0       0       0
   634 ;;Total ram usage:        4 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		_lcd_cmd
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _lcd_set_position
   646  068B                     _lcd_set_position:	
   647                           
   648                           ;incstack = 0
   649                           ; Regs used in _lcd_set_position: [wreg+status,2+status,0+pclath+cstack]
   650                           ;lcd_set_position@x stored from wreg
   651  068B  00F5               	movwf	lcd_set_position@x
   652                           
   653                           ;lcd.c: 61: uint8_t pos = 0;
   654  068C  01F6               	clrf	lcd_set_position@pos
   655                           
   656                           ;lcd.c: 62: if ( x == 0 ){
   657  068D  0875               	movf	lcd_set_position@x,w
   658  068E  1D03               	btfss	3,2
   659  068F  2EAA               	goto	l753
   660                           
   661                           ;lcd.c: 63: pos = y;
   662  0690  0873               	movf	lcd_set_position@y,w
   663  0691  00F4               	movwf	??_lcd_set_position
   664  0692  0874               	movf	??_lcd_set_position,w
   665  0693  00F6               	movwf	lcd_set_position@pos
   666                           
   667                           ;lcd.c: 64: pos |= (1<<7);
   668  0694  17F6               	bsf	lcd_set_position@pos,7
   669                           
   670                           ;lcd.c: 65: lcd_cmd((pos>>4)&0x0F);
   671  0695  0876               	movf	lcd_set_position@pos,w
   672  0696  00F4               	movwf	??_lcd_set_position
   673  0697  3004               	movlw	4
   674  0698                     u205:	
   675  0698  1003               	clrc
   676  0699  0CF4               	rrf	??_lcd_set_position,f
   677  069A  3EFF               	addlw	-1
   678  069B  1D03               	skipz
   679  069C  2E98               	goto	u205
   680  069D  0874               	movf	??_lcd_set_position,w
   681  069E  390F               	andlw	15
   682  069F  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   683                           
   684                           ;lcd.c: 66: lcd_cmd(pos & 0x0F);
   685  06A4  0876               	movf	lcd_set_position@pos,w
   686  06A5  390F               	andlw	15
   687  06A6  120A  118A  25C2   	fcall	_lcd_cmd
   688                           
   689                           ;lcd.c: 67: } else {
   690  06A9  0008               	return
   691  06AA                     l753:	
   692                           
   693                           ;lcd.c: 68: pos = y;
   694  06AA  0873               	movf	lcd_set_position@y,w
   695  06AB  00F4               	movwf	??_lcd_set_position
   696  06AC  0874               	movf	??_lcd_set_position,w
   697  06AD  00F6               	movwf	lcd_set_position@pos
   698                           
   699                           ;lcd.c: 69: pos | = (0xC0);
   700  06AE  30C0               	movlw	192
   701  06AF  00F4               	movwf	??_lcd_set_position
   702  06B0  0874               	movf	??_lcd_set_position,w
   703  06B1  04F6               	iorwf	lcd_set_position@pos,f
   704                           
   705                           ;lcd.c: 70: lcd_cmd((pos>>4)&0x0F);
   706  06B2  0876               	movf	lcd_set_position@pos,w
   707  06B3  00F4               	movwf	??_lcd_set_position
   708  06B4  3004               	movlw	4
   709  06B5                     u215:	
   710  06B5  1003               	clrc
   711  06B6  0CF4               	rrf	??_lcd_set_position,f
   712  06B7  3EFF               	addlw	-1
   713  06B8  1D03               	skipz
   714  06B9  2EB5               	goto	u215
   715  06BA  0874               	movf	??_lcd_set_position,w
   716  06BB  390F               	andlw	15
   717  06BC  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   718                           
   719                           ;lcd.c: 71: lcd_cmd(pos & 0x0F);
   720  06C1  0876               	movf	lcd_set_position@pos,w
   721  06C2  390F               	andlw	15
   722  06C3  120A  118A  25C2   	fcall	_lcd_cmd
   723  06C6  0008               	return
   724  06C7                     __end_of_lcd_set_position:	
   725                           ;lcd.c: 72: }
   726                           ;lcd.c: 73: return 0;
   727                           ;	Return value of _lcd_set_position is never used
   728                           
   729                           
   730                           	psect	text2
   731  0617                     __ptext2:	
   732 ;; *************** function _lcd_init *****************
   733 ;; Defined at:
   734 ;;		line 3 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio7\lcd.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      unsigned char 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          2       0       0       0       0
   751 ;;      Totals:         2       0       0       0       0
   752 ;;Total ram usage:        2 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    1
   755 ;; This function calls:
   756 ;;		_lcd_cmd
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _lcd_init
   764  0617                     _lcd_init:	
   765                           
   766                           ;lcd.c: 5: _delay((unsigned long)((40)*(4000000/4000.0)));
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   770  0617  3034               	movlw	52
   771  0618  00F4               	movwf	??_lcd_init+1
   772  0619  30F1               	movlw	241
   773  061A  00F3               	movwf	??_lcd_init
   774  061B                     u387:	
   775  061B  0BF3               	decfsz	??_lcd_init,f
   776  061C  2E1B               	goto	u387
   777  061D  0BF4               	decfsz	??_lcd_init+1,f
   778  061E  2E1B               	goto	u387
   779  061F  2E20               	nop2
   780                           
   781                           ;lcd.c: 6: TRISB = 0x00;
   782  0620  1683               	bsf	3,5	;RP0=1, select bank1
   783  0621  1303               	bcf	3,6	;RP1=0, select bank1
   784  0622  0186               	clrf	6	;volatile
   785                           
   786                           ;lcd.c: 7: ANSELH = 0x00;
   787  0623  1683               	bsf	3,5	;RP0=1, select bank3
   788  0624  1703               	bsf	3,6	;RP1=1, select bank3
   789  0625  0189               	clrf	9	;volatile
   790                           
   791                           ;lcd.c: 8: lcd_cmd(0x02);
   792  0626  3002               	movlw	2
   793  0627  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   794                           
   795                           ;lcd.c: 9: lcd_cmd(0x02);
   796  062C  3002               	movlw	2
   797  062D  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   798                           
   799                           ;lcd.c: 10: lcd_cmd(0x08);
   800  0632  3008               	movlw	8
   801  0633  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   802                           
   803                           ;lcd.c: 11: lcd_cmd(0x00);
   804  0638  3000               	movlw	0
   805  0639  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   806                           
   807                           ;lcd.c: 12: lcd_cmd(0x0C);
   808  063E  300C               	movlw	12
   809  063F  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   810                           
   811                           ;lcd.c: 13: lcd_cmd(0x00);
   812  0644  3000               	movlw	0
   813  0645  120A  118A  25C2  120A  118A  	fcall	_lcd_cmd
   814                           
   815                           ;lcd.c: 14: lcd_cmd(0x06);
   816  064A  3006               	movlw	6
   817  064B  120A  118A  25C2   	fcall	_lcd_cmd
   818  064E  0008               	return
   819  064F                     __end_of_lcd_init:	
   820                           ;lcd.c: 16: return 0;
   821                           ;	Return value of _lcd_init is never used
   822                           
   823                           
   824                           	psect	text3
   825  05C2                     __ptext3:	
   826 ;; *************** function _lcd_cmd *****************
   827 ;; Defined at:
   828 ;;		line 21 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio7\lcd.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  cmd             1    wreg     unsigned char 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  cmd             1    2[COMMON] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      unsigned char 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         1       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0
   845 ;;      Totals:         3       0       0       0       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_lcd_init
   852 ;;		_lcd_set_position
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _lcd_cmd
   858  05C2                     _lcd_cmd:	
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
   862                           ;lcd_cmd@cmd stored from wreg
   863  05C2  00F2               	movwf	lcd_cmd@cmd
   864                           
   865                           ;lcd.c: 23: PORTB = cmd;
   866  05C3  0872               	movf	lcd_cmd@cmd,w
   867  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   868  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   869  05C6  0086               	movwf	6	;volatile
   870                           
   871                           ;lcd.c: 24: PORTB &= ~(1<<4);
   872  05C7  30EF               	movlw	239
   873  05C8  00F0               	movwf	??_lcd_cmd
   874  05C9  0870               	movf	??_lcd_cmd,w
   875  05CA  0586               	andwf	6,f	;volatile
   876                           
   877                           ;lcd.c: 25: PORTB |= (1<<5);
   878  05CB  1686               	bsf	6,5	;volatile
   879                           
   880                           ;lcd.c: 26: _delay((unsigned long)((2)*(4000000/4000.0)));
   881  05CC  3003               	movlw	3
   882  05CD  00F1               	movwf	??_lcd_cmd+1
   883  05CE  3097               	movlw	151
   884  05CF  00F0               	movwf	??_lcd_cmd
   885  05D0                     u397:	
   886  05D0  0BF0               	decfsz	??_lcd_cmd,f
   887  05D1  2DD0               	goto	u397
   888  05D2  0BF1               	decfsz	??_lcd_cmd+1,f
   889  05D3  2DD0               	goto	u397
   890  05D4  2DD5               	nop2
   891                           
   892                           ;lcd.c: 27: PORTB &= ~(1<<5);
   893  05D5  30DF               	movlw	223
   894  05D6  00F0               	movwf	??_lcd_cmd
   895  05D7  0870               	movf	??_lcd_cmd,w
   896  05D8  1283               	bcf	3,5	;RP0=0, select bank0
   897  05D9  1303               	bcf	3,6	;RP1=0, select bank0
   898  05DA  0586               	andwf	6,f	;volatile
   899                           
   900                           ;lcd.c: 28: _delay((unsigned long)((2)*(4000000/4000.0)));
   901  05DB  3003               	movlw	3
   902  05DC  00F1               	movwf	??_lcd_cmd+1
   903  05DD  3097               	movlw	151
   904  05DE  00F0               	movwf	??_lcd_cmd
   905  05DF                     u407:	
   906  05DF  0BF0               	decfsz	??_lcd_cmd,f
   907  05E0  2DDF               	goto	u407
   908  05E1  0BF1               	decfsz	??_lcd_cmd+1,f
   909  05E2  2DDF               	goto	u407
   910  05E3  2DE4               	nop2
   911  05E4  0008               	return
   912  05E5                     __end_of_lcd_cmd:	
   913                           ;lcd.c: 29: return 0;
   914                           ;	Return value of _lcd_cmd is never used
   915                           
   916                           
   917                           	psect	text4
   918  06C7                     __ptext4:	
   919 ;; *************** function _lcd_data *****************
   920 ;; Defined at:
   921 ;;		line 33 in file "C:\Users\Brenn\OneDrive\Área de Trabalho\provaMicro\Code\Micro\microcontroladores\exercicio7\lcd.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  data            1    wreg     unsigned char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  data            1    4[COMMON] unsigned char 
   926 ;;  high_nibble     1    3[COMMON] unsigned char 
   927 ;;  low_nibble      1    2[COMMON] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      unsigned char 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         3       0       0       0       0
   939 ;;      Temps:          2       0       0       0       0
   940 ;;      Totals:         5       0       0       0       0
   941 ;;Total ram usage:        5 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _lcd_data
   952  06C7                     _lcd_data:	
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   956                           ;lcd_data@data stored from wreg
   957  06C7  00F4               	movwf	lcd_data@data
   958                           
   959                           ;lcd.c: 35: uint8_t high_nibble;
   960                           ;lcd.c: 36: uint8_t low_nibble;
   961                           ;lcd.c: 38: high_nibble = data >> 4;
   962  06C8  0874               	movf	lcd_data@data,w
   963  06C9  00F0               	movwf	??_lcd_data
   964  06CA  3004               	movlw	4
   965  06CB                     u225:	
   966  06CB  1003               	clrc
   967  06CC  0CF0               	rrf	??_lcd_data,f
   968  06CD  3EFF               	addlw	-1
   969  06CE  1D03               	skipz
   970  06CF  2ECB               	goto	u225
   971  06D0  0870               	movf	??_lcd_data,w
   972  06D1  00F1               	movwf	??_lcd_data+1
   973  06D2  0871               	movf	??_lcd_data+1,w
   974  06D3  00F3               	movwf	lcd_data@high_nibble
   975                           
   976                           ;lcd.c: 39: high_nibble &= 0x0F;
   977  06D4  300F               	movlw	15
   978  06D5  00F0               	movwf	??_lcd_data
   979  06D6  0870               	movf	??_lcd_data,w
   980  06D7  05F3               	andwf	lcd_data@high_nibble,f
   981                           
   982                           ;lcd.c: 41: low_nibble = data & 0x0F;
   983  06D8  0874               	movf	lcd_data@data,w
   984  06D9  390F               	andlw	15
   985  06DA  00F0               	movwf	??_lcd_data
   986  06DB  0870               	movf	??_lcd_data,w
   987  06DC  00F2               	movwf	lcd_data@low_nibble
   988                           
   989                           ;lcd.c: 42: PORTB = high_nibble;
   990  06DD  0873               	movf	lcd_data@high_nibble,w
   991  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   992  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   993  06E0  0086               	movwf	6	;volatile
   994                           
   995                           ;lcd.c: 43: PORTB |= (1<<4);
   996  06E1  1606               	bsf	6,4	;volatile
   997                           
   998                           ;lcd.c: 44: PORTB |= (1<<5);
   999  06E2  1686               	bsf	6,5	;volatile
  1000                           
  1001                           ;lcd.c: 45: _delay((unsigned long)((2)*(4000000/4000.0)));
  1002  06E3  3003               	movlw	3
  1003  06E4  00F1               	movwf	??_lcd_data+1
  1004  06E5  3097               	movlw	151
  1005  06E6  00F0               	movwf	??_lcd_data
  1006  06E7                     u417:	
  1007  06E7  0BF0               	decfsz	??_lcd_data,f
  1008  06E8  2EE7               	goto	u417
  1009  06E9  0BF1               	decfsz	??_lcd_data+1,f
  1010  06EA  2EE7               	goto	u417
  1011  06EB  2EEC               	nop2
  1012                           
  1013                           ;lcd.c: 46: PORTB &= ~(1<<5);
  1014  06EC  30DF               	movlw	223
  1015  06ED  00F0               	movwf	??_lcd_data
  1016  06EE  0870               	movf	??_lcd_data,w
  1017  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1018  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1019  06F1  0586               	andwf	6,f	;volatile
  1020                           
  1021                           ;lcd.c: 47: _delay((unsigned long)((2)*(4000000/4000.0)));
  1022  06F2  3003               	movlw	3
  1023  06F3  00F1               	movwf	??_lcd_data+1
  1024  06F4  3097               	movlw	151
  1025  06F5  00F0               	movwf	??_lcd_data
  1026  06F6                     u427:	
  1027  06F6  0BF0               	decfsz	??_lcd_data,f
  1028  06F7  2EF6               	goto	u427
  1029  06F8  0BF1               	decfsz	??_lcd_data+1,f
  1030  06F9  2EF6               	goto	u427
  1031  06FA  2EFB               	nop2
  1032                           
  1033                           ;lcd.c: 49: PORTB = low_nibble;
  1034  06FB  0872               	movf	lcd_data@low_nibble,w
  1035  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06FE  0086               	movwf	6	;volatile
  1038                           
  1039                           ;lcd.c: 50: PORTB |= (1<<4);
  1040  06FF  1606               	bsf	6,4	;volatile
  1041                           
  1042                           ;lcd.c: 51: PORTB |= (1<<5);
  1043  0700  1686               	bsf	6,5	;volatile
  1044                           
  1045                           ;lcd.c: 52: _delay((unsigned long)((2)*(4000000/4000.0)));
  1046  0701  3003               	movlw	3
  1047  0702  00F1               	movwf	??_lcd_data+1
  1048  0703  3097               	movlw	151
  1049  0704  00F0               	movwf	??_lcd_data
  1050  0705                     u437:	
  1051  0705  0BF0               	decfsz	??_lcd_data,f
  1052  0706  2F05               	goto	u437
  1053  0707  0BF1               	decfsz	??_lcd_data+1,f
  1054  0708  2F05               	goto	u437
  1055  0709  2F0A               	nop2
  1056                           
  1057                           ;lcd.c: 53: PORTB &= ~(1<<5);
  1058  070A  30DF               	movlw	223
  1059  070B  00F0               	movwf	??_lcd_data
  1060  070C  0870               	movf	??_lcd_data,w
  1061  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1062  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1063  070F  0586               	andwf	6,f	;volatile
  1064                           
  1065                           ;lcd.c: 54: _delay((unsigned long)((2)*(4000000/4000.0)));
  1066  0710  3003               	movlw	3
  1067  0711  00F1               	movwf	??_lcd_data+1
  1068  0712  3097               	movlw	151
  1069  0713  00F0               	movwf	??_lcd_data
  1070  0714                     u447:	
  1071  0714  0BF0               	decfsz	??_lcd_data,f
  1072  0715  2F14               	goto	u447
  1073  0716  0BF1               	decfsz	??_lcd_data+1,f
  1074  0717  2F14               	goto	u447
  1075  0718  2F19               	nop2
  1076  0719  0008               	return
  1077  071A                     __end_of_lcd_data:	
  1078                           ;lcd.c: 56: return 0;
  1079                           ;	Return value of _lcd_data is never used
  1080                           
  1081                           
  1082                           	psect	text5
  1083  05E5                     __ptext5:	
  1084 ;; *************** function ___lwmod *****************
  1085 ;; Defined at:
  1086 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  divisor         2    0[COMMON] unsigned int 
  1089 ;;  dividend        2    2[COMMON] unsigned int 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  counter         1    5[COMMON] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2    0[COMMON] unsigned int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         4       0       0       0       0
  1102 ;;      Locals:         1       0       0       0       0
  1103 ;;      Temps:          1       0       0       0       0
  1104 ;;      Totals:         6       0       0       0       0
  1105 ;;Total ram usage:        6 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function ___lwmod
  1116  05E5                     ___lwmod:	
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1120  05E5  0870               	movf	___lwmod@divisor,w
  1121  05E6  0471               	iorwf	___lwmod@divisor+1,w
  1122  05E7  1903               	btfsc	3,2
  1123  05E8  2E12               	goto	l837
  1124  05E9  01F5               	clrf	___lwmod@counter
  1125  05EA  0AF5               	incf	___lwmod@counter,f
  1126  05EB                     l827:	
  1127  05EB  1BF1               	btfsc	___lwmod@divisor+1,7
  1128  05EC  2DF9               	goto	l829
  1129  05ED  3001               	movlw	1
  1130  05EE                     u315:	
  1131  05EE  1003               	clrc
  1132  05EF  0DF0               	rlf	___lwmod@divisor,f
  1133  05F0  0DF1               	rlf	___lwmod@divisor+1,f
  1134  05F1  3EFF               	addlw	-1
  1135  05F2  1D03               	skipz
  1136  05F3  2DEE               	goto	u315
  1137  05F4  3001               	movlw	1
  1138  05F5  00F4               	movwf	??___lwmod
  1139  05F6  0874               	movf	??___lwmod,w
  1140  05F7  07F5               	addwf	___lwmod@counter,f
  1141  05F8  2DEB               	goto	l827
  1142  05F9                     l829:	
  1143  05F9  0871               	movf	___lwmod@divisor+1,w
  1144  05FA  0273               	subwf	___lwmod@dividend+1,w
  1145  05FB  1D03               	skipz
  1146  05FC  2DFF               	goto	u335
  1147  05FD  0870               	movf	___lwmod@divisor,w
  1148  05FE  0272               	subwf	___lwmod@dividend,w
  1149  05FF                     u335:	
  1150  05FF  1C03               	skipc
  1151  0600  2E07               	goto	l833
  1152  0601  0870               	movf	___lwmod@divisor,w
  1153  0602  02F2               	subwf	___lwmod@dividend,f
  1154  0603  0871               	movf	___lwmod@divisor+1,w
  1155  0604  1C03               	skipc
  1156  0605  03F3               	decf	___lwmod@dividend+1,f
  1157  0606  02F3               	subwf	___lwmod@dividend+1,f
  1158  0607                     l833:	
  1159  0607  3001               	movlw	1
  1160  0608                     u345:	
  1161  0608  1003               	clrc
  1162  0609  0CF1               	rrf	___lwmod@divisor+1,f
  1163  060A  0CF0               	rrf	___lwmod@divisor,f
  1164  060B  3EFF               	addlw	-1
  1165  060C  1D03               	skipz
  1166  060D  2E08               	goto	u345
  1167  060E  3001               	movlw	1
  1168  060F  02F5               	subwf	___lwmod@counter,f
  1169  0610  1D03               	btfss	3,2
  1170  0611  2DF9               	goto	l829
  1171  0612                     l837:	
  1172  0612  0873               	movf	___lwmod@dividend+1,w
  1173  0613  00F1               	movwf	?___lwmod+1
  1174  0614  0872               	movf	___lwmod@dividend,w
  1175  0615  00F0               	movwf	?___lwmod
  1176  0616  0008               	return
  1177  0617                     __end_of___lwmod:	
  1178                           
  1179                           	psect	text6
  1180  064F                     __ptext6:	
  1181 ;; *************** function ___lwdiv *****************
  1182 ;; Defined at:
  1183 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  divisor         2    6[COMMON] unsigned int 
  1186 ;;  dividend        2    8[COMMON] unsigned int 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  quotient        2   11[COMMON] unsigned int 
  1189 ;;  counter         1   13[COMMON] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2    6[COMMON] unsigned int 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         4       0       0       0       0
  1200 ;;      Locals:         3       0       0       0       0
  1201 ;;      Temps:          1       0       0       0       0
  1202 ;;      Totals:         8       0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function ___lwdiv
  1214  064F                     ___lwdiv:	
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1218  064F  01FB               	clrf	___lwdiv@quotient
  1219  0650  01FC               	clrf	___lwdiv@quotient+1
  1220  0651  0876               	movf	___lwdiv@divisor,w
  1221  0652  0477               	iorwf	___lwdiv@divisor+1,w
  1222  0653  1903               	btfsc	3,2
  1223  0654  2E86               	goto	l815
  1224  0655  01FD               	clrf	___lwdiv@counter
  1225  0656  0AFD               	incf	___lwdiv@counter,f
  1226  0657                     l803:	
  1227  0657  1BF7               	btfsc	___lwdiv@divisor+1,7
  1228  0658  2E65               	goto	l805
  1229  0659  3001               	movlw	1
  1230  065A                     u245:	
  1231  065A  1003               	clrc
  1232  065B  0DF6               	rlf	___lwdiv@divisor,f
  1233  065C  0DF7               	rlf	___lwdiv@divisor+1,f
  1234  065D  3EFF               	addlw	-1
  1235  065E  1D03               	skipz
  1236  065F  2E5A               	goto	u245
  1237  0660  3001               	movlw	1
  1238  0661  00FA               	movwf	??___lwdiv
  1239  0662  087A               	movf	??___lwdiv,w
  1240  0663  07FD               	addwf	___lwdiv@counter,f
  1241  0664  2E57               	goto	l803
  1242  0665                     l805:	
  1243  0665  3001               	movlw	1
  1244  0666                     u265:	
  1245  0666  1003               	clrc
  1246  0667  0DFB               	rlf	___lwdiv@quotient,f
  1247  0668  0DFC               	rlf	___lwdiv@quotient+1,f
  1248  0669  3EFF               	addlw	-1
  1249  066A  1D03               	skipz
  1250  066B  2E66               	goto	u265
  1251  066C  0877               	movf	___lwdiv@divisor+1,w
  1252  066D  0279               	subwf	___lwdiv@dividend+1,w
  1253  066E  1D03               	skipz
  1254  066F  2E72               	goto	u275
  1255  0670  0876               	movf	___lwdiv@divisor,w
  1256  0671  0278               	subwf	___lwdiv@dividend,w
  1257  0672                     u275:	
  1258  0672  1C03               	skipc
  1259  0673  2E7B               	goto	l811
  1260  0674  0876               	movf	___lwdiv@divisor,w
  1261  0675  02F8               	subwf	___lwdiv@dividend,f
  1262  0676  0877               	movf	___lwdiv@divisor+1,w
  1263  0677  1C03               	skipc
  1264  0678  03F9               	decf	___lwdiv@dividend+1,f
  1265  0679  02F9               	subwf	___lwdiv@dividend+1,f
  1266  067A  147B               	bsf	___lwdiv@quotient,0
  1267  067B                     l811:	
  1268  067B  3001               	movlw	1
  1269  067C                     u285:	
  1270  067C  1003               	clrc
  1271  067D  0CF7               	rrf	___lwdiv@divisor+1,f
  1272  067E  0CF6               	rrf	___lwdiv@divisor,f
  1273  067F  3EFF               	addlw	-1
  1274  0680  1D03               	skipz
  1275  0681  2E7C               	goto	u285
  1276  0682  3001               	movlw	1
  1277  0683  02FD               	subwf	___lwdiv@counter,f
  1278  0684  1D03               	btfss	3,2
  1279  0685  2E65               	goto	l805
  1280  0686                     l815:	
  1281  0686  087C               	movf	___lwdiv@quotient+1,w
  1282  0687  00F7               	movwf	?___lwdiv+1
  1283  0688  087B               	movf	___lwdiv@quotient,w
  1284  0689  00F6               	movwf	?___lwdiv
  1285  068A  0008               	return
  1286  068B                     __end_of___lwdiv:	
  1287  007E                     btemp	set	126	;btemp
  1288  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    _lcd_set_position->_lcd_cmd
    _lcd_init->_lcd_cmd
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1304
                                              0 BANK0      2     2      0
                            ___lwdiv
                            ___lwmod
                           _lcd_data
                           _lcd_init
                   _lcd_set_position
 ---------------------------------------------------------------------------------
 (1) _lcd_set_position                                     4     3      1     340
                                              3 COMMON     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     371
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _lcd_data
   _lcd_init
     _lcd_cmd
   _lcd_set_position
     _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 21 05:42:57 2020

             lcd_data@data 0074                         l34 07E6                        l811 067B  
                      l803 0657                        l805 0665                        l815 0686  
                      l833 0607                        l753 06AA                        l827 05EB  
                      l829 05F9                        l837 0612                        l865 0760  
                      u205 0698                        u215 06B5                        u225 06CB  
                      u315 05EE                        u245 065A                        u335 05FF  
                      u407 05DF                        u265 0666                        u345 0608  
                      u417 06E7                        u275 0672                        u427 06F6  
                      u285 067C                        u437 0705                        u447 0714  
                      u377 0731                        u387 061B                        u397 05D0  
                      _cen 0024                        _dez 0023                        _pos 0022  
      lcd_data@high_nibble 0073                       _main 071A                       btemp 007E  
                     start 0000                      ?_main 0070                      _ANSEL 0188  
          __end_of___lwdiv 068B            __end_of___lwmod 0617                      _PORTB 0006  
                    _TRISA 0085                      _TRISB 0086            __end_of_lcd_cmd 05E5  
                    status 0003                      wtemp0 007E            __initialization 07F4  
             __end_of_main 07F4                     ??_main 0026                     _ADCON0 001F  
                   _ADCON1 009F          ?_lcd_set_position 0073                     _ADRESH 001E  
                   _ADRESL 009E                     _ANSELH 0189         ??_lcd_set_position 0074  
         __end_of_lcd_data 071A           __end_of_lcd_init 064F                  ??___lwdiv 007A  
                ??___lwmod 0074                     _milhar 0025                     _tensao 0020  
                ??_lcd_cmd 0070    __end_of__initialization 07FC             __pcstackCOMMON 0070  
               __pbssBANK0 0020                 __pmaintext 071A                  ?_lcd_data 0070  
                ?_lcd_init 0070                    ___lwdiv 064F                    ___lwmod 05E5  
                  __ptext1 068B                    __ptext2 0617                    __ptext3 05C2  
                  __ptext4 06C7                    __ptext5 05E5                    __ptext6 064F  
                  _lcd_cmd 05C2                 ??_lcd_data 0070                 ??_lcd_init 0073  
     end_of_initialization 07FC  __size_of_lcd_set_position 003C                 lcd_cmd@cmd 0072  
      start_initialization 07F4         lcd_data@low_nibble 0072                  ___latbits 0002  
            __pcstackBANK0 0026          __size_of_lcd_data 0053          __size_of_lcd_init 0038  
         ___lwdiv@dividend 0078           _lcd_set_position 068B                   ?___lwdiv 0076  
                 ?___lwmod 0070                   ?_lcd_cmd 0070           ___lwdiv@quotient 007B  
         __size_of___lwdiv 003C           __size_of___lwmod 0032           __size_of_lcd_cmd 0023  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   _lcd_data 06C7  
                 _lcd_init 0617              __size_of_main 00DA   __end_of_lcd_set_position 06C7  
         ___lwmod@dividend 0072            ___lwmod@divisor 0070            ___lwmod@counter 0075  
      lcd_set_position@pos 0076          lcd_set_position@x 0075          lcd_set_position@y 0073  
